{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Desktop\\\\myProjects\\\\mern-social-media-master\\\\client\\\\src\\\\components\\\\AnanomousUser\\\\saveAnanomMessages\\\\LeftSide.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\nimport { getConversations } from \"../../../redux/actions/saveConversation\";\nimport { getDataAPI } from \"../../utils/fetchData\";\nimport UserCard from \"../UserCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnanomLeftSide = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    auth,\n    message\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const pageEnd = useRef();\n  const [page, setPage] = useState(0);\n  const [search, setSearch] = useState(\"\");\n  const [searchUsers, setSearchUsers] = useState([]);\n\n  const handleSearch = async e => {\n    _s();\n\n    e.preventDefault(); // if (!search) return setSearchUsers([]);\n    //     try {\n    //         const res = await getDataAPI(`search?username=${search}`, auth.token);\n    //         console.log(res);\n    //     //   setSearchUsers(res.data.users);\n    //     } catch (err) {\n    //       dispatch({\n    //         type: GLOBALTYPES.ALERT,\n    //         payload: { error: err.response.data.msg },\n    //       });\n    //     }\n    //   };\n    //   const handleAddUser = (user) => {\n    //     setSearch(\"\");\n    //     setSearchUsers([]);\n    //     dispatch(addUser({ user, message }));\n    //     return history.push(`/message/${user._id}`);\n    //   };\n    //   const isActive = (user) => {\n    //     if (id === user._id) return \"active\";\n    //     return \"\";\n    //   };\n\n    useEffect(() => {\n      if (message.firstLoad) return;\n      dispatch(getConversations({\n        auth\n      }));\n    }, [dispatch, auth, message.firstLoad]);\n    useEffect(() => {\n      const observer = new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting) {\n          setPage(p => p + 1);\n        }\n      }, {\n        threshold: 0.1\n      });\n      observer.observe(pageEnd.current);\n    }, [setPage]);\n    useEffect(() => {\n      if (message.resultUsers >= (page - 1) * 9 && page > 1) {\n        dispatch(getConversations({\n          auth,\n          page\n        }));\n      }\n    }, [message.resultUsers, page, auth, dispatch]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"message_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          placeholder: \"search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            display: \"none\"\n          },\n          type: \"submit\",\n          id: \"search\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message_chat_list\",\n        children: [searchUsers.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: message.users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            cclassName: `message_user ${isActive(user)}`,\n            onClick: () => handleAddUser(user),\n            children: /*#__PURE__*/_jsxDEV(UserCard, {\n              user: user,\n              msg: true,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this)\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this))\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            opacity: 0\n          },\n          ref: pageEnd,\n          children: \"Load more..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  _s(handleSearch, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n};\n\n_s2(AnanomLeftSide, \"rHaAKe9aC9QODL3zYifIsZiWqL0=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useParams];\n});\n\n_c = AnanomLeftSide;\nexport default AnanomLeftSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnanomLeftSide\");","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/components/AnanomousUser/saveAnanomMessages/LeftSide.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","useHistory","useParams","GLOBALTYPES","getConversations","getDataAPI","UserCard","AnanomLeftSide","auth","message","state","dispatch","history","id","pageEnd","page","setPage","search","setSearch","searchUsers","setSearchUsers","handleSearch","e","preventDefault","firstLoad","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","resultUsers","target","value","display","length","users","map","user","isActive","handleAddUser","_id","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\r\nimport { getConversations } from \"../../../redux/actions/saveConversation\";\r\nimport { getDataAPI } from \"../../utils/fetchData\";\r\nimport UserCard from \"../UserCard\";\r\n\r\nconst AnanomLeftSide = () => {\r\n    const { auth, message } = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const pageEnd = useRef();\r\n    const [page, setPage] = useState(0);\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchUsers, setSearchUsers] = useState([]);\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n        // if (!search) return setSearchUsers([]);\r\n\r\n        //     try {\r\n        //         const res = await getDataAPI(`search?username=${search}`, auth.token);\r\n        //         console.log(res);\r\n        //     //   setSearchUsers(res.data.users);\r\n        //     } catch (err) {\r\n        //       dispatch({\r\n        //         type: GLOBALTYPES.ALERT,\r\n        //         payload: { error: err.response.data.msg },\r\n        //       });\r\n        //     }\r\n        //   };\r\n\r\n        //   const handleAddUser = (user) => {\r\n        //     setSearch(\"\");\r\n        //     setSearchUsers([]);\r\n        //     dispatch(addUser({ user, message }));\r\n        //     return history.push(`/message/${user._id}`);\r\n        //   };\r\n\r\n        //   const isActive = (user) => {\r\n        //     if (id === user._id) return \"active\";\r\n        //     return \"\";\r\n        //   };\r\n\r\n        useEffect(() => {\r\n            if (message.firstLoad) return;\r\n            dispatch(getConversations({ auth }));\r\n        }, [dispatch, auth, message.firstLoad]);\r\n\r\n        useEffect(() => {\r\n            const observer = new IntersectionObserver(\r\n                (entries) => {\r\n                    if (entries[0].isIntersecting) {\r\n                        setPage((p) => p + 1);\r\n                    }\r\n                },\r\n                {\r\n                    threshold: 0.1,\r\n                }\r\n            );\r\n            observer.observe(pageEnd.current);\r\n        }, [setPage]);\r\n\r\n        useEffect(() => {\r\n            if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n                dispatch(getConversations({ auth, page }));\r\n            }\r\n        }, [message.resultUsers, page, auth, dispatch]);\r\n\r\n        return (\r\n            <>\r\n                <form className=\"message_header\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={search}\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder=\"search...\"\r\n                    />\r\n\r\n                    <button style={{ display: \"none\" }} type=\"submit\" id=\"search\">\r\n                        Search\r\n                    </button>\r\n                </form>\r\n\r\n                <div className=\"message_chat_list\">\r\n                    {searchUsers.length !== 0 ? (\r\n                        <>\r\n                            {/* {searchUsers.map((user) => (\r\n              <div\r\n                key={user._id}\r\n                className={`message_user ${isActive(user)}`}\r\n                onClick={() => handleAddUser(user)}\r\n              >\r\n                <UserCard user={user} />\r\n              </div>\r\n            ))} */}\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {message.users.map((user) => (\r\n                                <div\r\n                                    key={user._id}\r\n                                    cclassName={`message_user ${isActive(user)}`}\r\n                                    onClick={() => handleAddUser(user)}\r\n                                >\r\n                                    <UserCard user={user} msg={true}>\r\n                                        <i className=\"fas fa-circle\" />\r\n                                    </UserCard>\r\n                                </div>\r\n                            ))}\r\n                        </>\r\n                    )}\r\n\r\n                    <button style={{ opacity: 0 }} ref={pageEnd}>\r\n                        Load more..\r\n                    </button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AnanomLeftSide;\r\n"]},"metadata":{},"sourceType":"module"}