{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Desktop\\\\myProjects\\\\mern-social-media-master\\\\client\\\\src\\\\components\\\\AnanomousUser\\\\AnanomUserChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\"; // import UserCard from \"../UserCard\";\n\nimport AnanomUserCard from \"./AnanomUserCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport MsgDisplay from \"../message/MsgDisplay\";\nimport AnanomMsgDisplay from \"./AnanomMsgDisplay\";\nimport Icons from \"../Icons\";\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\nimport { imageShow, videoShow } from \"../../utils/mediaShow\";\nimport { imageUpload } from \"../../utils/imageUpload\"; // import {\n//   addMessage,\n//   getMessages,\n//   MESSAGE_TYPES,\n// } from \"../../redux/actions/messageAction\";\n\nimport LoadIcon from \"../../images/loading.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AnanomUserChat = props => {\n  _s();\n\n  console.log(props);\n  const googleId = props.receiverGoogleId;\n  const ananomConversation = props.ananomConversation;\n  const receieverSocketID = props.receieverSocketID;\n  const id = props.id;\n  const ownID = props.ownId;\n  const [messages, setMessages] = useState([]);\n  const {\n    auth,\n    message,\n    theme,\n    socket\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [incomingMessage, setIncomingMessage] = useState(null); // const [value, setValue] = useState();\n  // const [user, setUser] = useState([]);\n\n  const [text, setText] = useState(\"\");\n  const [page, setPage] = useState(0); // const [data, setData] = useState([]);\n  // const { id } = useParams();\n\n  const [media, setMedia] = useState([]);\n  const [loadMedia, setLoadMedia] = useState(false);\n  const refDisplay = useRef();\n  const pageEnd = useRef();\n  useEffect(() => {\n    socket.on(\"getAnanomMessage\", data => {\n      console.log(data);\n      setIncomingMessage({\n        sender: data.sender,\n        receiverId: auth.user._id,\n        text: data.text,\n        media: data.media,\n        createdAt: data.createdAt\n      });\n    });\n  }, [socket]);\n  console.log(incomingMessage);\n  useEffect(() => {\n    incomingMessage && setMessages(prev => [...prev, incomingMessage]);\n  }, [incomingMessage]);\n\n  const handleChangeMedia = e => {\n    const files = [...e.target.files];\n    let err = \"\";\n    let newMedia = [];\n    files.forEach(file => {\n      if (!file) {\n        return err = \"File does not exist.\";\n      }\n\n      if (file.size > 1024 * 1024 * 5) {\n        return err = \"Image size must be less than 5 mb.\";\n      }\n\n      return newMedia.push(file);\n    });\n\n    if (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err\n        }\n      });\n    }\n\n    setMedia([...media, ...newMedia]);\n  };\n\n  const handleDeleteMedia = index => {\n    const newArr = [...media];\n    newArr.splice(index, 1);\n    setMedia(newArr);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text.trim() && media.length === 0) return;\n    setText(\"\");\n    setMedia([]);\n    setLoadMedia(true);\n    let newArr = [];\n    if (media.length > 0) newArr = await imageUpload(media);\n    let message = {\n      sender: auth.user._id,\n      receiverId: googleId,\n      text,\n      media: newArr,\n      createdAt: new Date().toISOString()\n    };\n    console.log(ananomConversation);\n    console.log(ownID); // ananomConversation?.members?.includes(ownID) &&\n\n    setMessages(prev => [...prev, message]);\n    socket.emit(\"sendAnanomMessage\", message);\n    setLoadMedia(false); // await dispatch(addMessage({ msg, auth, socket }));\n\n    if (refDisplay.current) {\n      refDisplay.current.scrollIntoView({\n        behaviour: \"smooth\",\n        block: \"end\"\n      });\n    }\n  }; // useEffect(() => {\n  //   if (id) {\n  //     const getMessagesData = async () => {\n  //       dispatch({\n  //         type: MESSAGE_TYPES.GET_MESSAGES,\n  //         payload: { messages: [] },\n  //       });\n  //       setPage(1);\n  //       await dispatch(getMessages({ auth, id }));\n  //       if (refDisplay.current) {\n  //         refDisplay.current.scrollIntoView({\n  //           behaviour: \"smooth\",\n  //           block: \"end\",\n  //         });\n  //       }\n  //     };\n  //     getMessagesData();\n  //   }\n  // }, [id, dispatch, auth]);\n  // load more\n\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(p => p + 1);\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(pageEnd.current);\n  }, [setPage]); // useEffect(() => {\n  //   if (message.resultData >= (page - 1) * 9 && page > 1) {\n  //     dispatch(getMessages({ auth, id, page }));\n  //   }\n  // }, [message.resultData, page, id, auth, dispatch]);\n\n  useEffect(() => {\n    if (refDisplay.current) {\n      refDisplay.current.scrollIntoView({\n        behaviour: \"smooth\",\n        block: \"end\"\n      });\n    }\n  }, [text]);\n  useEffect(() => {\n    if (incomingMessage) {\n      refDisplay.current.scrollIntoView({\n        behaviour: \"smooth\",\n        block: \"end\"\n      });\n    }\n  }, [incomingMessage]);\n  console.log(googleId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_header\",\n      children: /*#__PURE__*/_jsxDEV(AnanomUserCard, {\n        find: props.find,\n        setFind: props.setFind,\n        end: props.end,\n        setEnd: props.setEnd,\n        bcode: props.bcode,\n        setBcode: props.setBcode,\n        receiver: googleId,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-trash text-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_container\",\n      style: {\n        height: media.length > 0 ? \"calc(100% - 180px)\" : \"\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_display\",\n        ref: refDisplay,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginTop: \"-25px\",\n            opacity: 0\n          },\n          ref: pageEnd,\n          children: \"Load..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [msg.sender !== auth.user._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_row other_message\",\n            children: /*#__PURE__*/_jsxDEV(AnanomMsgDisplay, {\n              msg: msg,\n              theme: theme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), msg.sender === auth.user._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_row you_message\",\n            children: /*#__PURE__*/_jsxDEV(MsgDisplay, {\n              user: auth.user,\n              msg: msg,\n              theme: theme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)), loadMedia && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_row you_message\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: LoadIcon,\n            alt: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show_media\",\n      style: {\n        display: media.length > 0 ? \"\" : \"none\"\n      },\n      children: media.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"file_media\",\n        children: [item.type.match(/video/i) ? videoShow(URL.createObjectURL(item), theme) : imageShow(URL.createObjectURL(item), theme), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleDeleteMedia(index),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat_input\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Type a message.\",\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        style: {\n          filter: theme ? \"invert(1)\" : \"invert(0)\",\n          background: theme ? \"#040404\" : \"\",\n          color: theme ? \"white\" : \"\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icons, {\n        setContent: setText,\n        content: text,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file_upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-image color-c1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          id: \"file\",\n          multiple: true,\n          accept: \"image/*,video/*\",\n          onChange: handleChangeMedia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: text || media.length > 0 ? false : true,\n        className: \"material-icons\",\n        children: \"near_me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AnanomUserChat, \"yfBnduDwKNbgiLq29qgKgwdgy3E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AnanomUserChat;\nexport default AnanomUserChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnanomUserChat\");","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/components/AnanomousUser/AnanomUserChat.js"],"names":["React","useEffect","useState","useRef","AnanomUserCard","useDispatch","useSelector","useParams","MsgDisplay","AnanomMsgDisplay","Icons","GLOBALTYPES","imageShow","videoShow","imageUpload","LoadIcon","AnanomUserChat","props","console","log","googleId","receiverGoogleId","ananomConversation","receieverSocketID","id","ownID","ownId","messages","setMessages","auth","message","theme","socket","state","dispatch","incomingMessage","setIncomingMessage","text","setText","page","setPage","media","setMedia","loadMedia","setLoadMedia","refDisplay","pageEnd","on","data","sender","receiverId","user","_id","createdAt","prev","handleChangeMedia","e","files","target","err","newMedia","forEach","file","size","push","type","ALERT","payload","error","handleDeleteMedia","index","newArr","splice","handleSubmit","preventDefault","trim","length","Date","toISOString","emit","current","scrollIntoView","behaviour","block","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","find","setFind","end","setEnd","bcode","setBcode","height","marginTop","opacity","map","msg","display","item","match","URL","createObjectURL","value","filter","background","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\n// import UserCard from \"../UserCard\";\r\nimport AnanomUserCard from \"./AnanomUserCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MsgDisplay from \"../message/MsgDisplay\";\r\nimport AnanomMsgDisplay from \"./AnanomMsgDisplay\"\r\nimport Icons from \"../Icons\";\r\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\r\nimport { imageShow, videoShow } from \"../../utils/mediaShow\";\r\nimport { imageUpload } from \"../../utils/imageUpload\";\r\n// import {\r\n//   addMessage,\r\n//   getMessages,\r\n//   MESSAGE_TYPES,\r\n// } from \"../../redux/actions/messageAction\";\r\nimport LoadIcon from \"../../images/loading.gif\";\r\n\r\nconst AnanomUserChat = (props) => {\r\n  console.log(props)\r\n  const googleId = props.receiverGoogleId;\r\n  const ananomConversation = props.ananomConversation;\r\n  const receieverSocketID = props.receieverSocketID;\r\n  const id = props.id;\r\n  const ownID = props.ownId;\r\n    const [messages, setMessages] = useState([]);\r\n  const { auth, message, theme, socket } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [incomingMessage, setIncomingMessage] = useState(null);\r\n  // const [value, setValue] = useState();\r\n  // const [user, setUser] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n  const [page, setPage] = useState(0);\r\n  // const [data, setData] = useState([]);\r\n  // const { id } = useParams();\r\n  const [media, setMedia] = useState([]);\r\n  const [loadMedia, setLoadMedia] = useState(false);\r\n\r\n  const refDisplay = useRef();\r\n  const pageEnd = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"getAnanomMessage\", (data) => {\r\n      console.log(data);\r\n      setIncomingMessage({\r\n        sender: data.sender,\r\n        receiverId: auth.user._id,\r\n        text: data.text,\r\n        media: data.media,\r\n        createdAt: data.createdAt,\r\n      });\r\n    });\r\n  }, [socket]);\r\n\r\n  console.log(incomingMessage);\r\n\r\n  useEffect(() => {\r\n    incomingMessage &&\r\n      setMessages((prev) => [...prev, incomingMessage]); \r\n  }, [incomingMessage]);\r\n\r\n  const handleChangeMedia = (e) => {\r\n    const files = [...e.target.files];\r\n    let err = \"\";\r\n    let newMedia = [];\r\n\r\n    files.forEach((file) => {\r\n      if (!file) {\r\n        return (err = \"File does not exist.\");\r\n      }\r\n      if (file.size > 1024 * 1024 * 5) {\r\n        return (err = \"Image size must be less than 5 mb.\");\r\n      }\r\n      return newMedia.push(file);\r\n    });\r\n    if (err) {\r\n      dispatch({ type: GLOBALTYPES.ALERT, payload: { error: err } });\r\n    }\r\n    setMedia([...media, ...newMedia]);\r\n  };\r\n\r\n  const handleDeleteMedia = (index) => {\r\n    const newArr = [...media];\r\n    newArr.splice(index, 1);\r\n    setMedia(newArr);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!text.trim() && media.length === 0) return;\r\n    setText(\"\");\r\n    setMedia([]);\r\n\r\n    setLoadMedia(true);\r\n\r\n    let newArr = [];\r\n    if (media.length > 0) newArr = await imageUpload(media);\r\n\r\n    let message = {\r\n      sender: auth.user._id,\r\n      receiverId: googleId,\r\n      text,\r\n      media: newArr,\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n    console.log(ananomConversation)\r\n    console.log(ownID);\r\n    // ananomConversation?.members?.includes(ownID) &&\r\n      setMessages((prev) => [...prev, message]);\r\n    socket.emit(\"sendAnanomMessage\", message);\r\n    setLoadMedia(false);\r\n    // await dispatch(addMessage({ msg, auth, socket }));\r\n    if (refDisplay.current) {\r\n      refDisplay.current.scrollIntoView({\r\n        behaviour: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (id) {\r\n  //     const getMessagesData = async () => {\r\n  //       dispatch({\r\n  //         type: MESSAGE_TYPES.GET_MESSAGES,\r\n  //         payload: { messages: [] },\r\n  //       });\r\n\r\n  //       setPage(1);\r\n  //       await dispatch(getMessages({ auth, id }));\r\n  //       if (refDisplay.current) {\r\n  //         refDisplay.current.scrollIntoView({\r\n  //           behaviour: \"smooth\",\r\n  //           block: \"end\",\r\n  //         });\r\n  //       }\r\n  //     };\r\n\r\n  //     getMessagesData();\r\n  //   }\r\n  // }, [id, dispatch, auth]);\r\n\r\n  // load more\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  // useEffect(() => {\r\n  //   if (message.resultData >= (page - 1) * 9 && page > 1) {\r\n  //     dispatch(getMessages({ auth, id, page }));\r\n  //   }\r\n  // }, [message.resultData, page, id, auth, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (refDisplay.current) {\r\n      refDisplay.current.scrollIntoView({\r\n        behaviour: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    }\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    if (incomingMessage) {\r\n      refDisplay.current.scrollIntoView({\r\n        behaviour: \"smooth\",\r\n        block: \"end\",\r\n      });\r\n    }\r\n  }, [incomingMessage]);\r\n\r\n  console.log(googleId)\r\n  return (\r\n    <>\r\n      <div className=\"message_header\">\r\n        {/* {user.length !== 0 && ( */}\r\n        <AnanomUserCard\r\n          find={props.find}\r\n          setFind={props.setFind}\r\n          end={props.end}\r\n          setEnd={props.setEnd}\r\n          bcode={props.bcode}\r\n          setBcode={props.setBcode}\r\n          receiver={googleId}\r\n        >\r\n          <i className=\"fas fa-trash text-danger\" />\r\n        </AnanomUserCard>\r\n        {/* )} */}\r\n      </div>\r\n\r\n      <div\r\n        className=\"chat_container\"\r\n        style={{ height: media.length > 0 ? \"calc(100% - 180px)\" : \"\" }}\r\n      >\r\n        <div className=\"chat_display\" ref={refDisplay}>\r\n          <button style={{ marginTop: \"-25px\", opacity: 0 }} ref={pageEnd}>\r\n            Load..\r\n          </button>\r\n\r\n          {messages.map((msg, index) => (\r\n            <div key={index}>\r\n              {msg.sender !== auth.user._id && (\r\n                <div className=\"chat_row other_message\">\r\n                  <AnanomMsgDisplay msg={msg} theme={theme} />\r\n                </div>\r\n              )}\r\n              {msg.sender === auth.user._id && (\r\n                <div className=\"chat_row you_message\">\r\n                  <MsgDisplay user={auth.user} msg={msg} theme={theme} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {loadMedia && (\r\n            <div className=\"chat_row you_message\">\r\n              <img src={LoadIcon} alt=\"Loading...\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"show_media\"\r\n        style={{ display: media.length > 0 ? \"\" : \"none\" }}\r\n      >\r\n        {media.map((item, index) => (\r\n          <div key={index} id=\"file_media\">\r\n            {item.type.match(/video/i)\r\n              ? videoShow(URL.createObjectURL(item), theme)\r\n              : imageShow(URL.createObjectURL(item), theme)}\r\n            <span onClick={() => handleDeleteMedia(index)}>&times;</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <form className=\"chat_input\" onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder=\"Type a message.\"\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          style={{\r\n            filter: theme ? \"invert(1)\" : \"invert(0)\",\r\n            background: theme ? \"#040404\" : \"\",\r\n            color: theme ? \"white\" : \"\",\r\n          }}\r\n        />\r\n        <Icons setContent={setText} content={text} theme={theme} />\r\n        <div className=\"file_upload\">\r\n          <i className=\"fas fa-image color-c1\" />\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            id=\"file\"\r\n            multiple\r\n            accept=\"image/*,video/*\"\r\n            onChange={handleChangeMedia}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={text || media.length > 0 ? false : true}\r\n          className=\"material-icons\"\r\n        >\r\n          near_me\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnanomUserChat;\r\n"]},"metadata":{},"sourceType":"module"}