{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory,useParams}from\"react-router-dom\";// import { GLOBALTYPES } from \"../../../redux/actions/globalTypes\";\nimport{getConversations}from\"../../../redux/actions/saveConversation\";// import { getDataAPI } from \"../../../utils/fetchData\";\n// import AnanomMessageCard from \"./UserCard\"\nimport AnanomUserChat from\"./RightSide\";import AnanomMessageCard from\"./UserCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AnanomLeftSide=function AnanomLeftSide(){var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth,message=_useSelector.message,ananomMessages=_useSelector.ananomMessages;var dispatch=useDispatch();var history=useHistory();// const { id } = useParams();\nvar pageEnd=useRef();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];// const [search, setSearch] = useState(\"\");\n// const [users, setUsers] = useState([]);\nvar handleSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleSearch(_x){return _ref.apply(this,arguments);};}();// if (!search) return setSearchUsers([]);\n//     try {\n//         const res = await getDataAPI(`search?username=${search}`, auth.token);\n//         console.log(res);\n//     //   setSearchUsers(res.data.users);\n//     } catch (err) {\n//       dispatch({\n//         type: GLOBALTYPES.ALERT,\n//         payload: { error: err.response.data.msg },\n//       });\n//     }\n//   };\nvar handleAddUser=function handleAddUser(user){//     setSearch(\"\");\n//     setSearchUsers([]);\n//     dispatch(addUser({ user, message }));\nreturn history.push(\"/savemessage/\".concat(user.id));};//   const isActive = (user) => {\n//     if (id === user._id) return \"active\";\n//     return \"\";\n//   };\nuseEffect(function(){if(ananomMessages.firstLoad)return;dispatch(getConversations({auth:auth}));},[dispatch,auth,ananomMessages.firstLoad]);useEffect(function(){var observer=new IntersectionObserver(function(entries){if(entries[0].isIntersecting){setPage(function(p){return p+1;});}},{threshold:0.1});observer.observe(pageEnd.current);},[setPage]);// useEffect(() => {\n//   // if (message.resultUsers >= (page - 1) * 9 && page > 1) {\n//     dispatch(getConversations({ auth, page }));\n//   // }\n// }, [auth]);\nuseEffect(function(){if(ananomMessages.resultUsers>=(page-1)*9&&page>1){dispatch(getConversations({auth:auth,page:page}));}},[ananomMessages.resultUsers,page,auth,dispatch]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"message_header\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\"//   value={search}\n//   onChange={(e) => setSearch(e.target.value)}\n,placeholder:\"search...\"}),/*#__PURE__*/_jsx(\"button\",{style:{display:\"none\"},type:\"submit\",id:\"search\",children:\"Search\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"message_chat_list\",children:[/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsxs(_Fragment,{children:[console.log(ananomMessages.conversation),ananomMessages.conversation.map(function(user){return/*#__PURE__*/_jsx(\"div\",{// cclassName={`message_user ${isActive(user)}`}\nonClick:function onClick(){return handleAddUser(user);},children:/*#__PURE__*/_jsx(AnanomMessageCard,{conversation:user,children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-circle\"})})},user.id);})]}),/*#__PURE__*/_jsx(\"button\",{style:{opacity:0},ref:pageEnd,children:\"Load more..\"})]})]});};export default AnanomLeftSide;","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/components/AnanomousUser/saveAnanomMessages/LeftSide.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","useHistory","useParams","getConversations","AnanomUserChat","AnanomMessageCard","AnanomLeftSide","state","auth","message","ananomMessages","dispatch","history","pageEnd","page","setPage","handleSearch","e","preventDefault","handleAddUser","user","push","id","firstLoad","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","resultUsers","display","console","log","conversation","map","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n// import { GLOBALTYPES } from \"../../../redux/actions/globalTypes\";\r\nimport { getConversations } from \"../../../redux/actions/saveConversation\";\r\n// import { getDataAPI } from \"../../../utils/fetchData\";\r\n// import AnanomMessageCard from \"./UserCard\"\r\nimport AnanomUserChat from \"./RightSide\";\r\nimport AnanomMessageCard from \"./UserCard\";\r\n\r\nconst AnanomLeftSide = () => {\r\n  const { auth, message, ananomMessages } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  // const { id } = useParams();\r\n  const pageEnd = useRef();\r\n  const [page, setPage] = useState(0);\r\n\r\n  // const [search, setSearch] = useState(\"\");\r\n  // const [users, setUsers] = useState([]);\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n    }\r\n    // if (!search) return setSearchUsers([]);\r\n\r\n//     try {\r\n//         const res = await getDataAPI(`search?username=${search}`, auth.token);\r\n//         console.log(res);\r\n//     //   setSearchUsers(res.data.users);\r\n//     } catch (err) {\r\n//       dispatch({\r\n//         type: GLOBALTYPES.ALERT,\r\n//         payload: { error: err.response.data.msg },\r\n//       });\r\n//     }\r\n//   };\r\n\r\n  const handleAddUser = (user) => {\r\n//     setSearch(\"\");\r\n//     setSearchUsers([]);\r\n//     dispatch(addUser({ user, message }));\r\n    return history.push(`/savemessage/${user.id}`);\r\n  };\r\n\r\n//   const isActive = (user) => {\r\n//     if (id === user._id) return \"active\";\r\n//     return \"\";\r\n//   };\r\n\r\n  useEffect(() => {\r\n    if (ananomMessages.firstLoad) return;\r\n    dispatch(getConversations({ auth }));\r\n  }, [dispatch, auth, ananomMessages.firstLoad]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          setPage((p) => p + 1);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n    observer.observe(pageEnd.current);\r\n  }, [setPage]);\r\n\r\n  // useEffect(() => {\r\n  //   // if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n  //     dispatch(getConversations({ auth, page }));\r\n  //   // }\r\n  // }, [auth]);\r\n\r\n  useEffect(() => {\r\n    if (ananomMessages.resultUsers >= (page - 1) * 9 && page > 1) {\r\n      dispatch(getConversations({ auth, page }));\r\n    }\r\n  }, [ananomMessages.resultUsers, page, auth, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"message_header\">\r\n        <input\r\n          type=\"text\"\r\n          //   value={search}\r\n          //   onChange={(e) => setSearch(e.target.value)}\r\n          placeholder=\"search...\"\r\n        />\r\n\r\n        <button style={{ display: \"none\" }} type=\"submit\" id=\"search\">\r\n          Search\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"message_chat_list\">\r\n        {/* {searchUsers.length !== 0 ? ( */}\r\n        <>\r\n          {/* {searchUsers.map((user) => (\r\n              <div\r\n                key={user._id}\r\n                className={`message_user ${isActive(user)}`}\r\n                onClick={() => handleAddUser(user)}\r\n              >\r\n                <UserCard user={user} />\r\n              </div>\r\n            ))} */}\r\n        </>\r\n        {/* ) : ( */}\r\n        <>\r\n          {console.log(ananomMessages.conversation)}\r\n          {ananomMessages.conversation.map((user) => (\r\n            <div\r\n              key={user.id}\r\n              // cclassName={`message_user ${isActive(user)}`}\r\n              onClick={() => handleAddUser(user)}\r\n            >\r\n              <AnanomMessageCard conversation={user}>\r\n                <i className=\"fas fa-circle\" />\r\n              </AnanomMessageCard>\r\n            </div>\r\n          ))}\r\n        </>\r\n        {/* )} */}\r\n\r\n        <button style={{ opacity: 0 }} ref={pageEnd}>\r\n          Load more..\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default AnanomLeftSide;\r\n"]},"metadata":{},"sourceType":"module"}