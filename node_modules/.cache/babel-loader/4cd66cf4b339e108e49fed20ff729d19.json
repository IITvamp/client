{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Desktop\\\\myProjects\\\\mern-social-media-master\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport io from 'socket.io-client';\nimport PageRender from \"./customRouter/PageRender\";\nimport PrivateRouter from \"./customRouter/PrivateRouter\";\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport Home from \"./pages/home\";\nimport Alert from \"./components/alert/Alert\";\nimport Header from \"./components/header/Header\";\nimport StatusModal from \"./components/StatusModal\";\nimport { refreshToken } from \"./redux/actions/authAction\";\nimport { getPosts } from \"./redux/actions/postAction\";\nimport { getSuggestions } from \"./redux/actions/suggestionsAction\";\nimport { getNotifies } from \"./redux/actions/notifyAction\";\nimport AdminDashboard from \"./pages/adminDashboard\";\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\nimport SocketClient from \"./SocketClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    auth,\n    status,\n    modal,\n    userType\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(refreshToken());\n    const socket = io.connect(window.location.hostname + ':3000', {\n      transports: [\"websocket\", \"xhr-polling\", \"htmlfile\", \"jsonp-polling\"]\n    });\n    socket.on(\"error\", function () {\n      console.log(\"Sorry, there seems to be an issue with the connection!\");\n    });\n    socket.on(\"connect_error\", function (err) {\n      console.log(\"connect failed\" + err);\n    });\n    socket.on(\"connection\", function () {\n      console.log(\"connected\");\n    });\n    console.log(socket);\n    dispatch({\n      type: GLOBALTYPES.SOCKET,\n      payload: socket\n    });\n    return () => socket.close();\n  }, [dispatch]);\n  useEffect(() => {\n    if (auth.token) {\n      dispatch(getPosts(auth.token));\n      dispatch(getSuggestions(auth.token));\n      dispatch(getNotifies(auth.token));\n    }\n  }, [dispatch, auth.token]);\n  useEffect(() => {\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification\");\n    } else if (Notification.permission === \"granted\") {} else if (Notification.permission !== \"denied\") {\n      Notification.requestPermission().then(function (permission) {\n        if (permission === \"granted\") {}\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `App ${(status || modal) && \"mode\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [userType === \"user\" && auth.token && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 49\n        }, this), status && /*#__PURE__*/_jsxDEV(StatusModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 22\n        }, this), auth.token && /*#__PURE__*/_jsxDEV(SocketClient, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: userType === \"user\" ? auth.token ? Home : Login : auth.token ? AdminDashboard : Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), userType === \"user\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            component: Register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap_page\",\n            children: [/*#__PURE__*/_jsxDEV(PrivateRouter, {\n              exact: true,\n              path: \"/:page\",\n              component: PageRender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRouter, {\n              exact: true,\n              path: \"/:page/:id\",\n              component: PageRender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aTo2N8qI7ddGyuh0OrRoF+de0mU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/App.js"],"names":["BrowserRouter","Router","Route","useDispatch","useSelector","useEffect","io","PageRender","PrivateRouter","Login","Register","Home","Alert","Header","StatusModal","refreshToken","getPosts","getSuggestions","getNotifies","AdminDashboard","GLOBALTYPES","SocketClient","App","auth","status","modal","userType","state","dispatch","socket","connect","window","location","hostname","transports","on","console","log","err","type","SOCKET","payload","close","token","alert","Notification","permission","requestPermission","then"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport io from 'socket.io-client'\n\nimport PageRender from \"./customRouter/PageRender\";\nimport PrivateRouter from \"./customRouter/PrivateRouter\";\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport Home from \"./pages/home\";\nimport Alert from \"./components/alert/Alert\";\nimport Header from \"./components/header/Header\";\nimport StatusModal from \"./components/StatusModal\";\nimport { refreshToken } from \"./redux/actions/authAction\";\nimport { getPosts } from \"./redux/actions/postAction\";\nimport { getSuggestions } from \"./redux/actions/suggestionsAction\";\nimport { getNotifies } from \"./redux/actions/notifyAction\";\n\nimport AdminDashboard from \"./pages/adminDashboard\";\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\nimport SocketClient from \"./SocketClient\";\n\nfunction App() {\n  const { auth, status, modal, userType } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(refreshToken());\n\n    const socket = io.connect(window.location.hostname+':3000', {transports: [\"websocket\", \"xhr-polling\", \"htmlfile\", \"jsonp-polling\"]});\n    socket.on(\"error\", function () {\n      console.log(\"Sorry, there seems to be an issue with the connection!\");\n    });\n\n    socket.on(\"connect_error\", function (err) {\n      console.log(\"connect failed\" + err);\n    });\n\n    socket.on(\"connection\", function () {\n      console.log(\"connected\");\n      \n    });\n    console.log(socket)\n    dispatch({type: GLOBALTYPES.SOCKET, payload: socket })\n    return () => socket.close()\n  }, [dispatch]);\n\n\n  useEffect(() => {\n    if (auth.token) {\n      dispatch(getPosts(auth.token));\n      dispatch(getSuggestions(auth.token));\n      dispatch(getNotifies(auth.token));\n    }\n  }, [dispatch, auth.token]);\n\n  useEffect(() => {\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification\");\n    } else if (Notification.permission === \"granted\") {\n\n    } else if (Notification.permission !== \"denied\") {\n      Notification.requestPermission().then(function (permission) {\n        if (permission === \"granted\") {\n        }\n      });\n    }\n  }, [])\n\n   \n\n  return (\n    <Router>\n      <Alert />\n      <input type=\"checkbox\" id=\"theme\" />\n      <div className={`App ${(status || modal) && \"mode\"}`}>\n        <div className=\"main\">\n          {userType === \"user\" && auth.token && <Header />}\n          {status && <StatusModal />}\n          {auth.token && <SocketClient /> }\n          <Route\n            exact\n            path=\"/\"\n            component={\n              userType === \"user\"\n                ? auth.token\n                  ? Home\n                  : Login\n                : auth.token\n                ? AdminDashboard\n                : Login\n            }\n          />\n\n          {userType === \"user\" && (\n            <>\n              <Route exact path=\"/register\" component={Register} />\n              <div className=\"wrap_page\">\n                <PrivateRouter exact path=\"/:page\" component={PageRender} />\n                <PrivateRouter exact path=\"/:page/:id\" component={PageRender} />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}