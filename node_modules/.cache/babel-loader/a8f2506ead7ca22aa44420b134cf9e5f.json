{"ast":null,"code":"import React from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{ToastContainer,toast}from\"react-toastify\";import Loading from\"./Loading\";import Toast from\"../Toast\";import{GLOBALTYPES}from\"../../redux/actions/globalTypes\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Alert=function Alert(){var _useSelector=useSelector(function(state){return state;}),alert=_useSelector.alert;var dispatch=useDispatch();return/*#__PURE__*/_jsxs(\"div\",{children:[alert.loading&&/*#__PURE__*/_jsx(Loading,{}),alert.error&&/*#__PURE__*/ // toast(alert.error)\n_jsx(Toast,{msg:{title:\"Error\",body:alert.error},handleShow:function handleShow(){dispatch({type:GLOBALTYPES.ALERT,payload:{}});},bgColor:\"bg-danger\"}),alert.success&&/*#__PURE__*/_jsx(Toast,{msg:{title:\"Success\",body:alert.success},handleShow:function handleShow(){return dispatch({type:GLOBALTYPES.ALERT,payload:{}});},bgColor:\"bg-success\"})]});};export default Alert;","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/components/alert/Alert.js"],"names":["React","useSelector","useDispatch","ToastContainer","toast","Loading","Toast","GLOBALTYPES","Alert","state","alert","dispatch","loading","error","title","body","type","ALERT","payload","success"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,WAAT,KAA4B,iCAA5B,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,kBACAP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAX,EAAD,CADX,CACVC,KADU,cACVA,KADU,CAElB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,mBACE,uBACGQ,KAAK,CAACE,OAAN,eAAiB,KAAC,OAAD,IADpB,CAGGF,KAAK,CAACG,KAAN,gBACC;AACA,KAAC,KAAD,EACE,GAAG,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,IAAI,CAAEL,KAAK,CAACG,KAA9B,CADP,CAEE,UAAU,CAAE,qBAAM,CAChBF,QAAQ,CAAC,CAAEK,IAAI,CAAET,WAAW,CAACU,KAApB,CAA2BC,OAAO,CAAE,EAApC,CAAD,CAAR,CACD,CAJH,CAKE,OAAO,CAAC,WALV,EALJ,CAcGR,KAAK,CAACS,OAAN,eACC,KAAC,KAAD,EACE,GAAG,CAAE,CAAEL,KAAK,CAAE,SAAT,CAAoBC,IAAI,CAAEL,KAAK,CAACS,OAAhC,CADP,CAEE,UAAU,CAAE,4BAAMR,CAAAA,QAAQ,CAAC,CAAEK,IAAI,CAAET,WAAW,CAACU,KAApB,CAA2BC,OAAO,CAAE,EAApC,CAAD,CAAd,EAFd,CAGE,OAAO,CAAC,YAHV,EAfJ,GADF,CAwBD,CA3BD,CA6BA,cAAeV,CAAAA,KAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Loading from \"./Loading\";\nimport Toast from \"../Toast\";\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\n\nconst Alert = () => {\n  const { alert } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      {alert.loading && <Loading />}\n\n      {alert.error && (\n        // toast(alert.error)\n        <Toast\n          msg={{ title: \"Error\", body: alert.error }}\n          handleShow={() => {\n            dispatch({ type: GLOBALTYPES.ALERT, payload: {} })\n          }}\n          bgColor=\"bg-danger\"\n        />\n      )}\n\n      {alert.success && (\n        <Toast\n          msg={{ title: \"Success\", body: alert.success }}\n          handleShow={() => dispatch({ type: GLOBALTYPES.ALERT, payload: {} })}\n          bgColor=\"bg-success\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}