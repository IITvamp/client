{"ast":null,"code":"import { ANANOM_MESSAGE_TYPES } from \"../actions/saveConversation\";\nconst initialState = {\n  // message:[],\n  //   users: [],\n  //   resultUsers: 0,\n  conversation: [],\n  data: [],\n  resultData: 0,\n  resultUsers: 0,\n  firstLoad: false\n};\n\nconst ananomMessageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ANANOM_MESSAGE_TYPES.ADD_ANANOM_MESSAGE:\n      return { ...state,\n        data: [...state.data, action.payload] // users: state.users.map((user) =>\n        //   user._id === action.payload.recipient ||\n        //   user._id === action.payload.sender\n        //     ? {\n        //         ...user,\n        //         text: action.payload.text,\n        //         media: action.payload.media,\n        //       }\n        //     : user\n        // ),\n\n      };\n\n    case ANANOM_MESSAGE_TYPES.GET_ANANOM_CONVERSATIONS:\n      return { ...state,\n        conversation: action.payload.newArr,\n        resultUsers: action.payload.result,\n        firstLoad: true\n      };\n\n    case ANANOM_MESSAGE_TYPES.GET_ANANOM_MESSAGES:\n      return { ...state,\n        data: [] // resultData: action.payload.result,\n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ananomMessageReducer;","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/redux/reducers/ananomMessageReducer.js"],"names":["ANANOM_MESSAGE_TYPES","initialState","conversation","data","resultData","resultUsers","firstLoad","ananomMessageReducer","state","action","type","ADD_ANANOM_MESSAGE","payload","GET_ANANOM_CONVERSATIONS","newArr","result","GET_ANANOM_MESSAGES"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,6BAArC;AAEA,MAAMC,YAAY,GAAG;AACnB;AACA;AACA;AACAC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,IAAI,EAAE,EALa;AAMnBC,EAAAA,UAAU,EAAE,CANO;AAOnBC,EAAAA,WAAW,EAAE,CAPM;AAQnBC,EAAAA,SAAS,EAAE;AARQ,CAArB;;AAWA,MAAMC,oBAAoB,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,oBAAoB,CAACW,kBAA1B;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACG,OAAvB,CAFD,CAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZK,OAAP;;AAeF,SAAKZ,oBAAoB,CAACa,wBAA1B;AACE,aAAO,EACL,GAAGL,KADE;AAELN,QAAAA,YAAY,EAAEO,MAAM,CAACG,OAAP,CAAeE,MAFxB;AAGLT,QAAAA,WAAW,EAAEI,MAAM,CAACG,OAAP,CAAeG,MAHvB;AAILT,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAOF,SAAKN,oBAAoB,CAACgB,mBAA1B;AACE,aAAO,EACL,GAAGR,KADE;AAELL,QAAAA,IAAI,EAAE,EAFD,CAGL;;AAHK,OAAP;;AAMF;AACE,aAAOK,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,oBAAf","sourcesContent":["import { ANANOM_MESSAGE_TYPES } from \"../actions/saveConversation\";\r\n\r\nconst initialState = {\r\n  // message:[],\r\n  //   users: [],\r\n  //   resultUsers: 0,\r\n  conversation: [],\r\n  data: [],\r\n  resultData: 0,\r\n  resultUsers: 0,\r\n  firstLoad: false,\r\n};\r\n\r\nconst ananomMessageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ANANOM_MESSAGE_TYPES.ADD_ANANOM_MESSAGE:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n        // users: state.users.map((user) =>\r\n        //   user._id === action.payload.recipient ||\r\n        //   user._id === action.payload.sender\r\n        //     ? {\r\n        //         ...user,\r\n        //         text: action.payload.text,\r\n        //         media: action.payload.media,\r\n        //       }\r\n        //     : user\r\n        // ),\r\n      };\r\n\r\n    case ANANOM_MESSAGE_TYPES.GET_ANANOM_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        conversation: action.payload.newArr,\r\n        resultUsers: action.payload.result,\r\n        firstLoad: true,\r\n      };\r\n\r\n    case ANANOM_MESSAGE_TYPES.GET_ANANOM_MESSAGES:\r\n      return {\r\n        ...state,\r\n        data: [],\r\n        // resultData: action.payload.result,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ananomMessageReducer;\r\n"]},"metadata":{},"sourceType":"module"}