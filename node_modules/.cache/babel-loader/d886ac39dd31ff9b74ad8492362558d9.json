{"ast":null,"code":"import _slicedToArray from\"C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import CommentDisplay from'./comments/CommentDisplay';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Comments=function Comments(_ref){var post=_ref.post;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),comments=_useState2[0],setComments=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),showComments=_useState4[0],setShowComments=_useState4[1];var _useState5=useState(2),_useState6=_slicedToArray(_useState5,2),next=_useState6[0],setNext=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),replyComments=_useState8[0],setReplyComments=_useState8[1];useEffect(function(){var newCm=post.comments.filter(function(cm){return!cm.reply;});setComments(newCm);setShowComments(newCm.slice(newCm.length-next));},[post.comments,next]);useEffect(function(){var newReply=post.comments.filter(function(cm){return cm.reply;});setReplyComments(newReply);},[post.comments]);return/*#__PURE__*/_jsxs(\"div\",{className:\"comments\",children:[showComments.map(function(comment,index){return/*#__PURE__*/_jsx(CommentDisplay,{comment:comment,post:post,replyCm:replyComments.filter(function(item){return item.reply===comment._id;})},index);}),comments.length-next>0?/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setNext(next+10);},className:\"p-2 border-top\",style:{cursor:\"pointer\",color:\"crimson\"},children:\"Load more...\"}):comments.length>2&&/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return setNext(2);},className:\"p-2 border-top\",style:{cursor:\"pointer\",color:\"crimson\"},children:\"Hide...\"})]});};export default Comments;","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/components/home/Comments.js"],"names":["React","useState","useEffect","CommentDisplay","Comments","post","comments","setComments","showComments","setShowComments","next","setNext","replyComments","setReplyComments","newCm","filter","cm","reply","slice","length","newReply","map","comment","index","item","_id","cursor","color"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,eACKJ,QAAQ,CAAC,EAAD,CADb,wCACpBK,QADoB,eACVC,WADU,8BAEaN,QAAQ,CAAC,EAAD,CAFrB,yCAEpBO,YAFoB,eAENC,eAFM,8BAGHR,QAAQ,CAAC,CAAD,CAHL,yCAGpBS,IAHoB,eAGdC,OAHc,8BAIeV,QAAQ,CAAC,EAAD,CAJvB,yCAIpBW,aAJoB,eAILC,gBAJK,eAO3BX,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,KAAK,CAAGT,IAAI,CAACC,QAAL,CAAcS,MAAd,CAAqB,SAACC,EAAD,QAAQ,CAACA,EAAE,CAACC,KAAZ,EAArB,CAAd,CACAV,WAAW,CAACO,KAAD,CAAX,CACAL,eAAe,CAACK,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,MAAN,CAAeT,IAA3B,CAAD,CAAf,CACD,CAJQ,CAIN,CAACL,IAAI,CAACC,QAAN,CAAgBI,IAAhB,CAJM,CAAT,CAMAR,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,QAAQ,CAAGf,IAAI,CAACC,QAAL,CAAcS,MAAd,CAAqB,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACC,KAAX,EAArB,CAAjB,CACAJ,gBAAgB,CAACO,QAAD,CAAhB,CACD,CAHQ,CAGN,CAACf,IAAI,CAACC,QAAN,CAHM,CAAT,CAKE,mBACE,aAAK,SAAS,CAAC,UAAf,WACGE,YAAY,CAACa,GAAb,CAAiB,SAACC,OAAD,CAAUC,KAAV,qBAChB,KAAC,cAAD,EAEE,OAAO,CAAED,OAFX,CAGE,IAAI,CAAEjB,IAHR,CAIE,OAAO,CAAEO,aAAa,CAACG,MAAd,CAAqB,SAACS,IAAD,QAAUA,CAAAA,IAAI,CAACP,KAAL,GAAeK,OAAO,CAACG,GAAjC,EAArB,CAJX,EACOF,KADP,CADgB,EAAjB,CADH,CASGjB,QAAQ,CAACa,MAAT,CAAkBT,IAAlB,CAAyB,CAAzB,cACC,YACE,OAAO,CAAE,yBAAMC,CAAAA,OAAO,CAACD,IAAI,CAAG,EAAR,CAAb,EADX,CAEE,SAAS,CAAC,gBAFZ,CAGE,KAAK,CAAE,CAAEgB,MAAM,CAAE,SAAV,CAAqBC,KAAK,CAAE,SAA5B,CAHT,0BADD,CASCrB,QAAQ,CAACa,MAAT,CAAkB,CAAlB,eACE,YACE,OAAO,CAAE,yBAAMR,CAAAA,OAAO,CAAC,CAAD,CAAb,EADX,CAEE,SAAS,CAAC,gBAFZ,CAGE,KAAK,CAAE,CAAEe,MAAM,CAAE,SAAV,CAAqBC,KAAK,CAAE,SAA5B,CAHT,qBAnBN,GADF,CA+BH,CAjDD,CAmDA,cAAevB,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport CommentDisplay from './comments/CommentDisplay'\n\nconst Comments = ({post}) => {\n  const [comments, setComments] = useState([]);\n  const [showComments, setShowComments] = useState([]);\n  const [next, setNext] = useState(2);\n  const [replyComments, setReplyComments] = useState([]);\n\n\n  useEffect(() => {\n    const newCm = post.comments.filter((cm) => !cm.reply);\n    setComments(newCm);\n    setShowComments(newCm.slice(newCm.length - next));\n  }, [post.comments, next]);\n\n  useEffect(() => {\n    const newReply = post.comments.filter((cm) => cm.reply);\n    setReplyComments(newReply);\n  }, [post.comments]);\n\n    return (\n      <div className=\"comments\">\n        {showComments.map((comment, index) => (\n          <CommentDisplay\n            key={index}\n            comment={comment}\n            post={post}\n            replyCm={replyComments.filter((item) => item.reply === comment._id)}\n          />\n        ))}\n        {comments.length - next > 0 ? (\n          <div\n            onClick={() => setNext(next + 10)}\n            className=\"p-2 border-top\"\n            style={{ cursor: \"pointer\", color: \"crimson\" }}\n          >\n            Load more...\n          </div>\n        ) : (\n          comments.length > 2 && (\n            <div\n              onClick={() => setNext(2)}\n              className=\"p-2 border-top\"\n              style={{ cursor: \"pointer\", color: \"crimson\" }}\n            >\n              Hide...\n            </div>\n          )\n        )}\n      </div>\n    );\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}