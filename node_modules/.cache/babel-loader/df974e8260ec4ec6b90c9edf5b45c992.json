{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var checkImage=function checkImage(file){var err=\"\";if(!file){return err=\"File does not exist.\";}//?1 mb\nif(file.size>1024*1024){return err=\"File size must be less than 1 Mb.\";}if(file.type!==\"image/jpeg\"&&file.type!==\"image/png\"&&file.type!==\"image/jpg\"){return err=\"Image must be jpeg or png or jpg.\";}return err;};export var imageUpload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(images){var imgArr,_iterator,_step,item,formData,res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:imgArr=[];_iterator=_createForOfIteratorHelper(images);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=19;break;}item=_step.value;formData=new FormData();if(item.camera){formData.append(\"file\",item.camera);}else{formData.append(\"file\",item);}formData.append(\"upload_preset\",\"ayushbansalaccount\");formData.append(\"cloud_name\",\"datinginsta110\");_context.next=12;return fetch(\"https://api.cloudinary.com/v1_1/datinginsta110/image/upload\",{method:\"POST\",body:formData});case 12:res=_context.sent;_context.next=15;return res.json();case 15:data=_context.sent;imgArr.push({public_id:data.public_id,url:data.secure_url});case 17:_context.next=4;break;case 19:_context.next=24;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](2);_iterator.e(_context.t0);case 24:_context.prev=24;_iterator.f();return _context.finish(24);case 27:return _context.abrupt(\"return\",imgArr);case 28:case\"end\":return _context.stop();}}},_callee,null,[[2,21,24,27]]);}));return function imageUpload(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/utils/imageUpload.js"],"names":["checkImage","file","err","size","type","imageUpload","images","imgArr","item","formData","FormData","camera","append","fetch","method","body","res","json","data","push","public_id","url","secure_url"],"mappings":"6jBAAA,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAChC,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAG,CAACD,IAAJ,CAAS,CACL,MAAOC,CAAAA,GAAG,CAAG,sBAAb,CACH,CACL;AACI,GAAGD,IAAI,CAACE,IAAL,CAAY,KAAO,IAAtB,CAA2B,CACtB,MAAQD,CAAAA,GAAG,CAAG,mCAAd,CACJ,CAED,GACED,IAAI,CAACG,IAAL,GAAc,YAAd,EACAH,IAAI,CAACG,IAAL,GAAc,WADd,EAEAH,IAAI,CAACG,IAAL,GAAc,WAHhB,CAIE,CACA,MAAQF,CAAAA,GAAG,CAAG,mCAAd,CACD,CAED,MAAOA,CAAAA,GAAP,CACH,CAnBM,CAqBP,MAAO,IAAMG,CAAAA,WAAW,0FAAG,iBAAOC,MAAP,oKACnBC,MADmB,CACV,EADU,sCAELD,MAFK,8FAEbE,IAFa,aAGbC,QAHa,CAGF,GAAIC,CAAAA,QAAJ,EAHE,CAKnB,GAAGF,IAAI,CAACG,MAAR,CAAe,CACXF,QAAQ,CAACG,MAAT,CAAgB,MAAhB,CAAwBJ,IAAI,CAACG,MAA7B,EACH,CAFD,IAEK,CACDF,QAAQ,CAACG,MAAT,CAAgB,MAAhB,CAAwBJ,IAAxB,EACH,CAGDC,QAAQ,CAACG,MAAT,CAAgB,eAAhB,CAAiC,oBAAjC,EACAH,QAAQ,CAACG,MAAT,CAAgB,YAAhB,CAA8B,gBAA9B,EAbmB,uBAeDC,CAAAA,KAAK,CACrB,6DADqB,CAErB,CACEC,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEN,QAFR,CAFqB,CAfJ,SAebO,GAfa,sCAuBAA,CAAAA,GAAG,CAACC,IAAJ,EAvBA,SAuBbC,IAvBa,eAwBnBX,MAAM,CAACY,IAAP,CAAY,CAAEC,SAAS,CAAEF,IAAI,CAACE,SAAlB,CAA6BC,GAAG,CAAEH,IAAI,CAACI,UAAvC,CAAZ,EAxBmB,0PA4BhBf,MA5BgB,6EAAH,kBAAXF,CAAAA,WAAW,4CAAjB","sourcesContent":["export const checkImage = (file) => {\n    let err = \"\";\n    if(!file){\n        return err = \"File does not exist.\";\n    }\n//?1 mb\n    if(file.size > 1024 * 1024){\n         return (err = \"File size must be less than 1 Mb.\");\n    }\n\n    if (\n      file.type !== \"image/jpeg\" &&\n      file.type !== \"image/png\" &&\n      file.type !== \"image/jpg\"\n    ) {\n      return (err = \"Image must be jpeg or png or jpg.\");\n    }\n\n    return err;\n}\n\nexport const imageUpload = async (images) => {\n    let imgArr = [];\n    for(const item of images){\n        const formData = new FormData();\n\n        if(item.camera){\n            formData.append(\"file\", item.camera);\n        }else{\n            formData.append(\"file\", item);  \n        }\n\n        \n        formData.append(\"upload_preset\", \"ayushbansalaccount\");\n        formData.append(\"cloud_name\", \"datinginsta110\");\n\n        const res = await fetch(\n          \"https://api.cloudinary.com/v1_1/datinginsta110/image/upload\",\n          {\n            method: \"POST\",\n            body: formData,\n          }\n        );\n\n        const data = await res.json();\n        imgArr.push({ public_id: data.public_id, url: data.secure_url });\n        \n      \n    }\n    return imgArr;\n}"]},"metadata":{},"sourceType":"module"}