{"ast":null,"code":"import React,{useEffect}from\"react\";import{ToastContainer,toast}from\"react-toastify\";import{jsx as _jsx}from\"react/jsx-runtime\";var ComponentToast=function ComponentToast(_ref){var theme=_ref.theme,Component=_ref.Component;console.log(\"Componenet Toast called\");useEffect(function(){toast.clearWaitingQueue();if(theme===\"Error\"){toast.error(/*#__PURE__*/_jsx(Component,{}),{theme:\"colored\",autoClose:10000// onClose: handleShow,\n});}if(theme===\"Success\"){toast.success(/*#__PURE__*/_jsx(Component,{}),{theme:\"colored\",autoClose:10000// onClose: handleShow,\n});}},[]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ToastContainer,{})});};export default ComponentToast;","map":{"version":3,"sources":["C:/Users/ayush/Desktop/myProjects/mern-social-media-master/client/src/components/ComponentToast.js"],"names":["React","useEffect","ToastContainer","toast","ComponentToast","theme","Component","console","log","clearWaitingQueue","error","autoClose","success"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,C,2CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA0B,IAAvBC,CAAAA,KAAuB,MAAvBA,KAAuB,CAAhBC,SAAgB,MAAhBA,SAAgB,CAC/CC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAP,SAAS,CAAC,UAAM,CACdE,KAAK,CAACM,iBAAN,GACA,GAAIJ,KAAK,GAAK,OAAd,CAAuB,CACrBF,KAAK,CAACO,KAAN,cAAY,KAAC,SAAD,IAAZ,CAA0B,CACxBL,KAAK,CAAE,SADiB,CAExBM,SAAS,CAAE,KACX;AAHwB,CAA1B,EAKD,CACD,GAAIN,KAAK,GAAK,SAAd,CAAyB,CACvBF,KAAK,CAACS,OAAN,cAAc,KAAC,SAAD,IAAd,CAA6B,CAC3BP,KAAK,CAAE,SADoB,CAE3BM,SAAS,CAAE,KACX;AAH2B,CAA7B,EAKD,CACF,CAhBQ,CAgBN,EAhBM,CAAT,CAiBA,mBACE,kCACE,KAAC,cAAD,IADF,EADF,CAKD,CAxBD,CA0BA,cAAeP,CAAAA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst ComponentToast = ({ theme, Component }) => {\r\n  console.log(\"Componenet Toast called\")\r\n  useEffect(() => {\r\n    toast.clearWaitingQueue();\r\n    if (theme === \"Error\") {\r\n      toast.error(<Component/>, {\r\n        theme: \"colored\",\r\n        autoClose: 10000,\r\n        // onClose: handleShow,\r\n      });\r\n    }\r\n    if (theme === \"Success\") {\r\n      toast.success(<Component />, {\r\n        theme: \"colored\",\r\n        autoClose: 10000,\r\n        // onClose: handleShow,\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <ToastContainer></ToastContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComponentToast;\r\n"]},"metadata":{},"sourceType":"module"}